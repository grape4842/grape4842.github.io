@import url("font.css")
@charset "utf-8";
/*폰트 설성*/

/*한국어*/
@import url("https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/variable/pretendardvariable-dynamic-subset.min.css");
@font-face { 
	font-family:"KoddiUDOnGothic";
	src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-Regular.woff") format("woff");
	src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-Regular.otf") format("opentype");
	src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-Regular.woff2") format("woff2");
	font-weight:400;
	font-display : swap;
	font-style: normal;
} 
@font-face { 
	font-family:"KoddiUDOnGothic";
	src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-Bold.woff2") format("woff2");
	src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-Bold.woff") format("woff");
	src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-Bold.otf") format("opentype");
	font-weight:700;
	font-display : swap;
	font-style: normal;
} 
@font-face { 
	font-family:"KoddiUDOnGothic";
	src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-ExtraBold.woff2") format("woff2");
	src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-ExtraBold.woff") format("woff");
	src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-ExtraBold.otf") format("opentype");
	font-weight:900;
	font-display : swap;
	font-style: normal;
}

/*일본어 日本語*/
@import url("https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/variable/pretendardvariable.min.css");
@font-face { 
	font-family:"BIZ-UDPGothic";
	src: url("font/BIZ-UD/BIZ-UDPGothic.ttf") format("truetype");
	font-weight:400;
	font-display : swap;
	font-style: normal;
} 

@font-face { 
	font-family:"BIZ-UDPGothic";
	src: url("font/BIZ-UD/BIZ-UDPGothic-Bold.ttf") format("truetype");
	font-weight:700;
	font-display : swap;
	font-style: normal;
} 

@font-face { 
	font-family:"BIZ-UDMincho";
	src: url("font/BIZ-UD/BIZ-UDMincho-Regular.ttf") format("truetype");
	font-weight:400;
	font-display : swap;
	font-style: normal;
} 
@font-face { 
	font-family:"BIZ-UDPMincho";
	src: url("font/BIZ-UD/BIZ-UDPMincho-Regular.ttf") format("truetype");
	font-weight:400;
	font-display : swap;
	font-style: normal;
} 
@font-face { 
	font-family:"BIZ-UDGothic";
	src: url("font/BIZ-UD/BIZ-UDGothic.ttf") format("truetype");
	font-weight:400;
	font-display : swap;
	font-style: normal;
} 

@font-face { 
	font-family:"BIZ-UDGothic";
	src: url("font/BIZ-UD/BIZ-UDGothic-Bold.ttf") format("truetype");
	font-weight:700;
	font-display : swap;
	font-style: normal;
} 

:lang(ko) {
	word-break: keep-all;
	line-break:normal;
	font-family: "KoddiUDOnGothic","Pretendard Variable", sans-serif, serif;
}
:lang(ja) {
	word-break: auto-phrase;
	font-family: "BIZ-UDPGothic", "Pretendard Variable", sans-serif, serif;
	font-feature-settings: "palt";
}
/*컬러 설정*/
:root {
	color-scheme: light dark;
	--placeholder : light-dark(#444, #bbb);
	--warning : light-dark(#c30, #fcb);
	--pure_white : #fff;
	--pure_black : #000;
	--pure_red : #f00;
	--pure_yellow : #ff0;
	--pure_green : #0f0;
	--pure_blue : #00f;
	--kakao_yellow : #FEE500;
	--naver_green:#2DB400;
}
::selection {
	background:#baf; 
	color:var(--pure_black);
}

/*숨김텍스트 설정*/
.hidden, .blind, .a11y-txt, .sr-only, .sr_only, .a11y_txt {
	overflow: hidden;
	border: 0;
	position: absolute;
	/* relative를 사용해도 무관할 듯 하다 */
	z-index: -1;
	width: 1px;
	height: 1px;
	clip: rect(1px, 1px, 1px, 1px);
	clip-path: inset(50%);
}

@layer reset_css {
	:root {
		interpolate-size: allow-keywords;
		font-size: 1rem;
		font: inherit;
		vertical-align: baseline;
		line-height: 1.6; /* 가독성을 위한 행 높이 */
		-webkit-font-smoothing: antialiased; /* 텍스트 렌더링 개선 */
		margin: 0;
		padding: 0;
		position: relative;
		box-sizing: border-box; /* 보다 직관적인 box-sizing 설정 */
		-webkit-text-size-adjust: none;
		/* iOS의 가로 모드에서 텍스트 크기 조절 방지 */
		-moz-text-size-adjust: none;
		-ms-text-size-adjust: none;
		-o-text-size-adjust: none;
		color-scheme: dark light; /* 사용자가 다크 테마일 경우 자동으로 다크 테마 적용 */
		scroll-behavior: smooth; /* 부드러운 스크롤 */
		ruby-align: space-between;
		scrollbar-color: rgba(0 0 0 / 0.2) rgba(0 0 0 / 0.2);
	}
}
@supports not (min-block-size: 100dvb) {
	:where(html) {
		block-size: 100%;
		/* 브라우저 호환성을 위한 설정 */
	}
}
html {
	-moz-text-size-adjust: none;
	-webkit-text-size-adjust: none;
	text-size-adjust: none;
}
body {
	min-height: 100dvh;
	overflow-y:scroll;
}
*::before, *::after {
	box-sizing: inherit;
}
*, :where(body):not(img), body {
	font-size: 1rem;
	line-height: 1.6; /* 가독성을 위한 행 높이 */
	-webkit-font-smoothing: antialiased; /* 텍스트 렌더링 개선 */
	margin: 0;
	padding: 0;
	position: relative;
	box-sizing: border-box; /* 보다 직관적인 box-sizing 설정 */
	-webkit-text-size-adjust: none; /* iOS의 가로 모드에서 텍스트 크기 조절 방지 */
	color-scheme: dark light; /* 사용자가 다크 테마일 경우 자동으로 다크 테마 적용 */
	font-family: "KoddiUDOnGothic", "BIZ-UDPGothic","Pretendard Variable", sans-serif, serif;
	scroll-behavior: smooth; /* 부드러운 스크롤 */
	ruby-align: space-between;
}

:where(input, button, textarea, select, a, select option) {
	display: inline-flex;
	font: inherit; /* 입력 요소는 부모의 폰트 속성 계승 */
	color:inherit;
	box-sizing: border-box;
	padding:0.25rem;
	transition: filter 0.3s;
}
textarea, select, input {
	/*field-sizing: content;*/
	/*내용 길이에 따라 크기 조절*/
}
select, option {
	display: flex;
}
select option {padding:0.25rem;}
label:has(input:checked) {
	font-weight: 500;
}
select::-ms-expand {
	display: none;
	/* 화살표없애기 for ie10, 11 */
}
:where(input[type="text"], input[type="password"], input[type="search"], select) {
	min-width: 10rem!important;
	padding-left:0.5rem;
}
:where(input[type="text"], input[type="password"], input[type="search"]) {
	cursor: text;
}
:where(textarea) {
	min-height: 4lh;
	resize: vertical; /* 텍스트 영역의 가로 크기 조정 비활성화 */
	padding: 0.5rem; /* 텍스트 영역의 내부 여백 */
}

:where(:focus, button, label, select, summary, [role='button'], [role='option'], input, [type="file"]::file-selector-button) {
	cursor: pointer; /* 상호작용 가능한 요소임을 알 수 있도록 커서 변경 */
	position: relative;
	transition-duration: 0.3s;
}
input[type="file"], [type="file"]::file-selector-button {
	min-width: max-content;
}
summary::-webkit-details-marker {
/* Safari 브라우저용 사용자 정의 스타일 */
display: none;
}
summary {
	list-style-type: none;
	/* 그 외의 브라우저용 사용자 정의 스타일 */
}

:where(:disabled, label:has(> input:disabled), label:has(+ input:disabled), input:disabled + label) {
	cursor: not-allowed; 
	/* 비활성화된 입력 요소의 라벨 커서 변경 */
}

:where(button) {
	border-style: none; 
	/* 버튼의 기본 테두리 제거 */
}

:where(a) {
	position: relative;
	color: inherit; 
	/* 링크의 색상을 부모 요소와 동일하게 설정 */
	text-decoration:underline wavy; /* 링크의 밑줄 스타일 설정 */
	text-decoration-color: transparent;
	transition:text-decoration-color 0.3s, text-decoration 0.3s, outline 0.3s, filter 0.3s, transform 0.3s; 
	/* 밑줄 스타일 변경 시 애니메이션 적용 */
	text-underline-offset: 0.25rem;
	/* 링크 텍스트와 밑줄 사이의 간격 설정 */
}

:where(ul, ol, li) {
	list-style: none; 
	/* 목록의 기본 스타일 제거 */
}

:where(span, label) {
	vertical-align: middle;
	display: inline-flex;
	align-items: center;
}
:where(img, svg, video, canvas, audio, iframe, embed, object) {
	display: inline-flex; /* 멀티미디어 요소의 예측 가능한 디스플레이 설정 */
	aspect-ratio: auto; /* 콘텐츠의 종횡비 유지 */
	object-fit: contain; /* 콘텐츠가 부모 요소를 벗어나지 않도록 설정 */
	max-width: 100%; /* 부모 요소를 넘치지 못하게 설정 */
	height: auto;
	position: relative;
	vertical-align: middle;
	border:none;
}

:where(img, picture, svg) {
	max-inline-size: 100%; /* 이미지가 가용 공간을 넘지 않도록 설정 */
	block-size: auto; /* 콘텐츠 종횡비 유지 */
}

:where(h1, h2, h3, h4, h5, h6):not(dialog *) {
	line-height: 1.3;
	text-wrap: balance;
}
/* 긴 단어가 넘칠 경우 줄바꿈 */
:where(body, h1, h2, h3, h4, p, figure, blockquote, dl, dd) {
	margin-block-start: 0;
	margin-block-end: 0;
	overflow-wrap: break-word; 
}

/* 헤딩의 자식 요소는 부모의 폰트 속성 계승 */
:where(h1, h2, h3, h4, h5, h6) * {
	font: inherit; 
}

/* 일관성 있는 스타일의 수평선 */
:where(hr) { 
	border: none;
	border-block-start: 1px solid;
	color: inherit;
	block-size: 0;
	overflow: visible;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}

/*표 관련 속성*/
/* 테이블 셀의 경계선 결합 */
table {
	border-collapse: collapse;
	border-spacing: 0;
}
th, td {
	padding:0.5rem;
}

/* 스크롤바의 스타일 */
::-webkit-scrollbar-thumb {
	border-radius: 10rem; 
	cursor: pointer;
}

/* 스크롤바 트랙의 스타일 */
::-webkit-scrollbar-track {
	background-color: rgba(0, 0, 0, 0.1);
	border-radius: 10rem; 
}
/* 필드셋의 기본 테두리 제거 */
address {
	text-align: center;
}
fieldset {
	border: none; 
}

:modal, [popover], dialog, ::backdrop, ::details-content, dialog > * {
	transition:
	height 0.3s ease allow-discrete, 
	width 0.3s ease allow-discrete, 
	content-visibility 0.3s ease allow-discrete, 
	display 0.3s ease allow-discrete,
	opacity 0.3s ease allow-discrete, 
	scale 0.3s ease allow-discrete, 
	visibility 0.3s ease allow-discrete, 
	backdrop-filter 0.3s ease allow-discrete, 
	transform 0.3s ease allow-discrete, 
	background 0.3s ease allow-discrete;
}

details::details-content {
	height: 0;
	opacity: 0;
	overflow: clip;
}
details[open]::details-content {
	opacity: 1;
}

@supports (interpolate-size: allow-keywords) {
	:root {
		interpolate-size: allow-keywords;
		/* height : 0 (수치형) → auto(문자형) 의 애니메이션을 가능하게 하기 위한 지정*/
	}
	details[open]::details-content {
		height: auto;
	}
}

[popover], dialog {
	position: fixed;
	margin:auto;
	border-radius: 0.5rem;
	min-width:min-content;
	min-height: min-content;
	max-width: 90dvw;
	max-height: 90dvh;
	border:none;
	scale: 0;
	opacity: 0;
}
body:has(dialog[open]) {overflow: hidden;}
dialog form[method="dialog"], dialog :where(.popup_close, .popover_close, .close_button, .close_popup, .close_popover, .close_ctrl) {
	position: fixed;
	right:0;
	top:0;
	z-index: 5;
}
dialog :where(.popover_content,.popover_body,.popup_content, .popup_body,.popup_main,.modal_content) {
	margin: 0 auto;
}
dialog[open] :where(.popup_close, .popover_close, .close_button, .close_popup, .close_popover, .close_ctrl) button {
	border-radius: 0.5rem;
	display: flex;
	align-items: center;
	justify-content: center;
	height: 3rem;
	width: 3rem;
	aspect-ratio: 1/1;
	background: transparent;
	outline-offset: -0.25rem;
	z-index: 12;
}
dialog[open] :where(.popup_close, .popover_close, .close_button,.close_popup,.close_popover, .close_ctrl) img {
	max-height: 2rem;
	max-width: 2rem;
	aspect-ratio: 1/1;
}
dialog[open] :where(.popover_header,.popover_head,.popup_header,.popup_head,.popup_tit,.popup_title,.modal_header),
dialog[open] :where(.popover_content,.popover_body,.popup_content, .popup_body,.popup_main,.modal_content) {
	margin:0;
	padding:0.5rem 0.75rem;    
}
dialog[open] :where(.popover_header,.popover_head,.popup_header,.popup_head,.popup_tit,.popup_title,.modal_header) {
	display: flex;
	align-items: center;
	/*position: sticky;*/
	font-size: 1rem;
	font-weight: bold;
	left:0;
	top:0;
	height: 3rem;
	z-index: 2;
}
/* On Stage */
:popover-open, ::backdrop,
[open], dialog, dialog > * {
	opacity: 1;
	scale:1;
	transform: translateY(0);
}

/* Off Stage */
@starting-style {
	:popover-open, ::backdrop,
	[open], dialog, dialog > * {
		opacity: 0;
		scale:0;
	}
}

:where(#skipnav, #jumpnav, #jump_main_content, #skip_nav, #jump_nav, #nav_skip) {
	position: fixed;
	display: flex;
	justify-content: center;
	align-items: center;
	z-index: 40;
	top: -10rem;
	width: 100vw;
	line-height: 3rem;
	font-size: 1rem;
	font-weight: 900;
	text-align: center;
	transition: 0.3s top;
	border: 1px solid;
	background: var(--pure_black);
	color: var(--pure_white);
	backdrop-filter: blur(1.25rem);
}

:where(#skipnav, #jumpnav, #skip_nav):where(:focus, :hover) {
	top: 0rem;
	text-decoration: var(--pure_white) underline wavy 2px;
	text-underline-offset: 0.25rem;
}



/*많은 파일에서 공통으로 사용하는 고유 내용*/
.lightV {display: unset;}
.darkV {display: none;}
.View_PC, .PCV, .PC_View, .pc_view {display:none;}
.View_Mobile, .mobileV,.mobile_View, .mobile_view, .Mobile_View, .MobileV {
	display:unset;
}
dialog {
	width: 88vw;
}
.content_width {
	width: 90vw;
	margin: 0rem auto;
}
.youtube_video_frame {
	aspect-ratio: 16/9;
	min-width: 10rem;
	min-height: 6rem;
	margin:1rem auto;
}
/*고대비 모드*/
@media (prefers-contrast:more) {
	body {
		background-color:var(--pure_black) !important;
		color:var(--pure_white);
	}
	a {color:var(--pure_yellow);}
	a:visited {color:var(--pure_green);}
	::selection {
		background:var(--pure_white); 
		color:var(--pure_black);
	}

}

/*서울의 버스와 지하철*/
.metro_line {
	text-shadow:1px 1px rgba(0 0 0 / 0.5), -1px -1px rgba(0 0 0 / 0.5);
	display:inline-flex;
	font-size: 1rem;
	font-weight: bolder;
	border-radius:10rem;
	justify-content:center;
	align-items:center;
	min-width:2rem;
	min-height:2rem;
	color:var(--pure_white);
}
.numline {aspet-ratio:1/1;}
.line1 {background:#052F93;}
.line2 {background:#10A643;}
.line3 {background:#DE6D00;}
.line4 {background:#0099d1;}
.line5 {background:#A95094;}
.line6 {background:#D08D1A;}
.line7 {background:#657931;}
.line8 {background:#E74E6D;}
.line9 {background:#B58600;}
.gyline {
	background-color:#5F9C82; 
	padding:0px 0.5rem;
}

.bus_line {
	text-shadow:1px 1px rgba(0 0 0 / 0.5), -1px -1px rgba(0 0 0 / 0.5);
	display:inline-flex;
	font-size:1rem;
	font-weight: bolder;
	justify-content:center;
	align-items:center;
	border-radius:10rem;
	color:var(--pure_white);
	padding:0rem 0.25rem;
}
.g-bus {background-color:#5BB025;}
.b-bus {background-color:#3D5BAB;}
.r-bus {background-color:#F73711;}
.meter {
	color:var(--warning);
	padding:0rem 0.5rem;
	font-weight: 500;
}

/*animation*/
@media (prefers-reduced-motion: reduce) {
	* {
		transition: none;
		animation: none;
	}
}
/*Dark Mode*/
@media (prefers-color-scheme: dark) {
	.lightV {display: none;}
	.darkV {display: unset;}
	dialog :where(.popup_close,.popover_close,.close_button,.close_popup,.close_popover,.close_ctrl) img {
		filter: invert(1);
	}
}

/*기기별 CSS*/

/*PC*/
@media screen and (width >= 1400px) {
	.View_PC, .PCV, .PC_View, .pc_view {
		display:unset;
	}
	.View_Mobile, .mobileV,.mobile_View, .mobile_view, .Mobile_View, .MobileV {
		display:none;
	}
	.content_width {width:60dvw;}
	dialog {
		max-width: 50dvw;
	}
	th, td {padding:1rem;}
	dialog :where(.popover_header,.popover_head,.popup_header,.popup_head,.popup_tit,.popup_title,.modal_header),
	dialog :where(.popover_content,.popover_body,.popup_content, .popup_body,.popup_main,.modal_content) {
		padding:1.5rem 1.75rem;
	}
	dialog form[method="dialog"], dialog :where(.popup_close, .popover_close, .close_button, .close_popup, .close_popover, .close_ctrl) {
		right:1rem;
	}

}

/*1000px〜1400px iPad Pro*/
@media screen and (1000px <= width) and (width < 1400px) {
	.content_width {width:70dvw;}
	dialog {
		max-width: 66dvw;
	}
	th, td {padding:0.75rem;}
	dialog :where(.popover_header,.popover_head,.popup_header,.popup_head,.popup_tit,.popup_title,.modal_header),
	dialog :where(.popover_content,.popover_body,.popup_content, .popup_body,.popup_main,.modal_content) {
		padding:1rem 1.25rem;
	}
	dialog form[method="dialog"], dialog :where(.popup_close, .popover_close, .close_button, .close_popup, .close_popover, .close_ctrl) {
		right:0.75rem;
	}
}

/*700px〜1200px iPad*/
@media screen and (700px <= width) and (width < 1000px) {
	.content_width {width:80dvw;}
	dialog {
		max-width: 77dvw;
	}
	th, td {padding:0.5rem;}
}

/*Mobile*/
@media screen and (340px <= width) and (width < 700px) {

}
/*folded, watch*/
@media screen and (width < 330px) {
	.content_width {
		min-width: 90dvw;
		width:95dvw;
	}
	dialog {
		max-width: 90dvw;
	}
	th, td {padding:0.25rem;}
	dialog :where(.popover_header,.popover_head,.popup_header,.popup_head,.popup_tit,.popup_title,.modal_header),
	dialog :where(.popover_content,.popover_body,.popup_content, .popup_body,.popup_main,.modal_content) {
		padding:0.25rem 0.5rem;
	}
	dialog form[method="dialog"], dialog :where(.popup_close, .popover_close, .close_button, .close_popup, .close_popover, .close_ctrl) {
		right:-0.25rem;
	}
}